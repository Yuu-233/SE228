<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/data/mongo
       http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">

    <mongo:mongo-client id="mongo" host="localhost" port="27017">
        <mongo:client-options connections-per-host="8"
                              threads-allowed-to-block-for-connection-multiplier="4"
                              connect-timeout="1000"
                              max-wait-time="1500"
                              socket-keep-alive="true"
                              socket-timeout="1500"
                              write-concern="safe"/>
    </mongo:mongo-client>
    <mongo:db-factory id="mongoDbFactory" dbname="bookstore" mongo-ref="mongo"/>
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
    </bean>
    <mongo:repositories base-package="bookstore"/>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/bookstore?useSSL=false" />
        <property name="user" value="root" />
        <property name="password" value="" />
        <property name="maxPoolSize" value="40" />
        <property name="minPoolSize" value="1" />
        <property name="initialPoolSize" value="1" />
        <property name="maxIdleTime" value="20" />
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
          p:dataSource-ref="dataSource">
        <property name="mappingResources">
            <list>
                <value>hbm.xml/Book.hbm.xml</value>
                <value>hbm.xml/Order.hbm.xml</value>
                <value>hbm.xml/OrderItem.hbm.xml</value>
                <value>hbm.xml/User.hbm.xml</value>
            </list>
        </property>
        <!-- Hibernate SessionFactory -->
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
                hibernate.hbm2ddl.auto=update
                hibernate.show_sql=false
                hibernate.format_sql=true
            </value>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactory" />

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" isolation="DEFAULT" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRES_NEW"/>
            <tx:method name="find*" propagation="SUPPORTS"/>
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="beanPointcut" expression="execution(* bookstore.service.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="beanPointcut" />
    </aop:config>

    <bean id="bookDao" class="bookstore.dao.impl.BookDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="userDao" class="bookstore.dao.impl.UserDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="orderDao" class="bookstore.dao.impl.OrderDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="orderItemDao" class="bookstore.dao.impl.OrderItemDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="userInfoDao" class="bookstore.dao.impl.UserInfoDaoImpl">
        <property name="mongoTemplate" ref="mongoTemplate" />
    </bean>
    <bean id="groupChatDao" class="bookstore.dao.impl.GroupChatDaoImpl">
        <property name="mongoTemplate" ref="mongoTemplate" />
    </bean>

    <bean id="userService" class="bookstore.service.impl.UserServiceImpl">
        <property name="userDao" ref="userDao" />
        <property name="userInfoDao" ref="userInfoDao" />
    </bean>

    <bean id="bookService" class="bookstore.service.impl.BookServiceImpl">
        <property name="bookDao" ref="bookDao" />
    </bean>

    <bean id="orderService" class="bookstore.service.impl.OrderServiceImpl">
        <property name="orderDao" ref="orderDao" />
    </bean>

    <bean id="orderItemService" class="bookstore.service.impl.OrderItemServiceImpl">
        <property name="orderItemDao" ref="orderItemDao" />
    </bean>

    <bean id="groupChatService" class="bookstore.service.impl.GroupChatServiceImpl">
        <property name="userDao" ref="userDao" />
        <property name="userInfoDao" ref="userInfoDao" />
        <property name="groupChatDao" ref="groupChatDao" />
        <property name="convertUtil" ref="convertUtil" />
    </bean>

    <bean id="convertUtil" class="bookstore.socket.ConvertUtil">
        <property name="userDao" ref="userDao" />
        <property name="userInfoDao" ref="userInfoDao" />
    </bean>

    <bean id="bookstoreAspect" class="bookstore.aop.BookstoreAspect" />

    <aop:config>
        <aop:aspect ref="bookstoreAspect">
            <aop:pointcut id="pointcut" expression="execution(* bookstore.service.OrderService.deleteOrder(..)) and args(bookstore.model.Order)" />
            <aop:before method="beforeDeleteOrder" pointcut-ref="pointcut" />
            <aop:after method="afterDeleteOrder" pointcut="execution(* bookstore.service.OrderService.deleteOrder(..)) and args(order)" arg-names="order" />
        </aop:aspect>
    </aop:config>

    <!-- MySQL Cluster -->
    <!-- Read -->
    <bean id="dataSourceR" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3307/bookstore?useSSL=false" />
        <property name="user" value="root" />
        <property name="password" value="" />
        <property name="maxPoolSize" value="40" />
        <property name="minPoolSize" value="1" />
        <property name="initialPoolSize" value="1" />
        <property name="maxIdleTime" value="20" />
    </bean>

    <bean id="sessionFactoryR" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
          p:dataSource-ref="dataSourceR">
        <property name="mappingResources">
            <list>
                <value>hbm.xml/Book.hbm.xml</value>
                <value>hbm.xml/Order.hbm.xml</value>
                <value>hbm.xml/OrderItem.hbm.xml</value>
                <value>hbm.xml/User.hbm.xml</value>
            </list>
        </property>
        <!-- Hibernate SessionFactory -->
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
                hibernate.hbm2ddl.auto=update
                hibernate.show_sql=false
                hibernate.format_sql=true
            </value>
        </property>
    </bean>

    <bean id="transactionManagerR" class="org.springframework.orm.hibernate5.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactoryR" />

    <tx:advice id="txAdviceR" transaction-manager="transactionManagerR">
        <tx:attributes>
            <tx:method name="get*" read-only="true" isolation="DEFAULT" propagation="REQUIRED" />
            <tx:method name="find*" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="beanPointcutR" expression="execution(* bookstore.service.*.*(..))" />
        <aop:advisor advice-ref="txAdviceR" pointcut-ref="beanPointcutR" />
    </aop:config>

    <!-- Write -->
    <bean id="dataSourceW" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3307/bookstore?useSSL=false" />
        <property name="user" value="root" />
        <property name="password" value="" />
        <property name="maxPoolSize" value="40" />
        <property name="minPoolSize" value="1" />
        <property name="initialPoolSize" value="1" />
        <property name="maxIdleTime" value="20" />
    </bean>

    <bean id="sessionFactoryW" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
          p:dataSource-ref="dataSourceW">
        <property name="mappingResources">
            <list>
                <value>hbm.xml/Book.hbm.xml</value>
                <value>hbm.xml/Order.hbm.xml</value>
                <value>hbm.xml/OrderItem.hbm.xml</value>
                <value>hbm.xml/User.hbm.xml</value>
            </list>
        </property>
        <!-- Hibernate SessionFactory -->
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
                hibernate.hbm2ddl.auto=update
                hibernate.show_sql=false
                hibernate.format_sql=true
            </value>
        </property>
    </bean>

    <bean id="transactionManagerW" class="org.springframework.orm.hibernate5.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactoryW" />

    <tx:advice id="txAdviceW" transaction-manager="transactionManagerW">
        <tx:attributes>
            <tx:method name="update*" propagation="REQUIRES_NEW"/>
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="beanPointcutW" expression="execution(* bookstore.service.*.*(..))" />
        <aop:advisor advice-ref="txAdviceW" pointcut-ref="beanPointcutW" />
    </aop:config>
</beans>